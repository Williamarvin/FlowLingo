Starting Container

file:///app/start-production.js:6

const { execSync } = require('child_process');

                     ^

 

ReferenceError: require is not defined in ES module scope, you can use import instead

This file is being treated as an ES module because it has a '.js' file extension and '/app/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.

    at file:///app/start-production.js:6:22

    at ModuleJob.run (node:internal/modules/esm/module_job:343:25)

    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:647:26)

    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

 

Node.js v22.18.0

file:///app/start-production.js:6

const { execSync } = require('child_process');

                     ^

 

ReferenceError: require is not defined in ES module scope, you can use import instead

This file is being treated as an ES module because it has a '.js' file extension and '/app/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.

    at file:///app/start-production.js:6:22

    at ModuleJob.run (node:internal/modules/esm/module_job:343:25)

    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:647:26)

    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

 

Node.js v22.18.0

file:///app/start-production.js:6

const { execSync } = require('child_process');

                     ^

 

ReferenceError: require is not defined in ES module scope, you can use import instead

This file is being treated as an ES module because it has a '.js' file extension and '/app/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.

    at file:///app/start-production.js:6:22

    at ModuleJob.run (node:internal/modules/esm/module_job:343:25)

    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:647:26)

    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

 

Node.js v22.18.0

file:///app/start-production.js:6

const { execSync } = require('child_process');

                     ^

 

ReferenceError: require is not defined in ES module scope, you can use import instead

This file is being treated as an ES module because it has a '.js' file extension and '/app/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.

    at file:///app/start-production.js:6:22

    at ModuleJob.run (node:internal/modules/esm/module_job:343:25)

    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:647:26)

    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

 

Node.js v22.18.0

file:///app/start-production.js:6

const { execSync } = require('child_process');

                     ^

 

ReferenceError: require is not defined in ES module scope, you can use import instead

This file is being treated as an ES module because it has a '.js' file extension and '/app/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.

    at file:///app/start-production.js:6:22

    at ModuleJob.run (node:internal/modules/esm/module_job:343:25)

    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:647:26)
